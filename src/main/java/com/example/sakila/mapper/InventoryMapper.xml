<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.sakila.mapper.InventoryMapper">
	
	<delete id="deleteInventoryByKey" parameterType="Integer">
		DELETE FROM inventory
		WHERE inventory_id = #{inventoryId}
	</delete>
	
	<insert id="insertInventory" parameterType="com.example.sakila.vo.Inventory">
		INSERT INTO inventory(
			film_id,store_id
		) VALUES(
			#{filmId}, #{storeId}
		)
		
	</insert>
	
	<select id="selectInventoryCount" parameterType="com.example.sakila.vo.Inventory" resultType="int">
		SELECT count(*)
			FROM store s INNER JOIN inventory i
			ON s.store_id = i.store_id
			WHERE s.store_id = ${storeId}
	</select>

	<!-- /on/inventoryList -->
	<!-- 추가 과제 -->
	<!-- 1. Film X rental X payment 조인  -->
	<!-- 2. 검색기능 -->
	<select id="selectInventoryListByStore"
		parameterType="Map"
		resultType="Map">
	SELECT 
			t1.inventory_id inventoryId
			, t1.film_id filmId
			, t1.title title
			, t1.last_update lastUpdate
			, t2.customer_id customerId
			, IFNULL(t2.rental_date, '대여가능') rentalDate
		FROM  
				(SELECT
				i.inventory_id
				, i. film_id
				, f.title
				, i.last_update
				, i.store_id
				FROM inventory i INNER JOIN film f
				ON i.film_id = f.film_id) t1
					LEFT OUTER JOIN 
					(SELECT inventory_id, customer_id, rental_date
					FROM rental
					WHERE return_date IS NULL) t2
					ON t1.inventory_id = t2.inventory_id
		WHERE t1.store_id = #{storeId}
		ORDER BY t1.inventory_id DESC
		LIMIT #{beginRow}, #{rowPerPage}
	</select>
	
<!--  remove -->
	<select id="selectCountInventoryByFilm" parameterType="Integer">
		SELECT COUNT(*)
		FROM inventory
		WHERE film_id = #{filmId}
	</select>
</mapper>